From 84d19040286aaf945fa5f1c590119dd1a3f17fe6 Mon Sep 17 00:00:00 2001
From: Nothing-Dev <alfredomartinez_1423@hotmail.com>
Date: Mon, 28 Mar 2016 15:48:06 -0430
Subject: [PATCH] Add CSR 7820 configs

Signed-off-by: Nothing-Dev <alfredomartinez_1423@hotmail.com>
---
 tools/csr.c                |  4 +---
 tools/csr.h                |  1 +
 tools/csr_bcsp.c           | 18 ++++++++++-----
 tools/hciattach.c          | 55 +++++++++++++---------------------------------
 tools/hciattach.h          | 10 ++-------
 tools/hciattach_qualcomm.c |  1 +
 tools/hciattach_ti.c       | 54 +++++++++++++++++++++------------------------
 tools/hciattach_tialt.c    | 36 ++++++++++++++++++++++++++----
 tools/ppoll.h              | 14 ++++++++++++
 9 files changed, 103 insertions(+), 90 deletions(-)
 mode change 100644 => 100755 tools/hciattach_ti.c
 mode change 100644 => 100755 tools/hciattach_tialt.c
 create mode 100644 tools/ppoll.h

diff --git a/tools/csr.c b/tools/csr.c
index 2c09189..9185882 100644
--- a/tools/csr.c
+++ b/tools/csr.c
@@ -2750,12 +2750,10 @@ static int parse_line(char *str)
 	char *off, *end;
 
 	pskey = strtol(str + 1, NULL, 16);
-	off = strstr(str, "=");
+	off = strstr(str, "=") + 1;
 	if (!off)
 		return -EIO;
 
-	off++;
-
 	while (1) {
 		value = strtol(off, &end, 16);
 		if (value == 0 && off == end)
diff --git a/tools/csr.h b/tools/csr.h
index cc245a5..bac83ba 100644
--- a/tools/csr.h
+++ b/tools/csr.h
@@ -73,6 +73,7 @@
 #define CSR_VARID_FAULT_ARG			0x6806	/* uint16 */
 #define CSR_VARID_MAX_TX_POWER			0x6827	/* int8 */
 #define CSR_VARID_DEFAULT_TX_POWER		0x682b	/* int8 */
+#define CSR_VARID_INQ_PRI			0x685c  /* inquiry priority */
 #define CSR_VARID_PS				0x7003	/* complex */
 
 #define CSR_PSKEY_BDADDR					0x0001	/* bdaddr / uint16[] = { 0x00A5A5, 0x5b, 0x0002 } */
diff --git a/tools/csr_bcsp.c b/tools/csr_bcsp.c
index f7afe53..60d7ac1 100644
--- a/tools/csr_bcsp.c
+++ b/tools/csr_bcsp.c
@@ -36,6 +36,9 @@
 #include "csr.h"
 #include "ubcsp.h"
 
+#include <cutils/log.h>
+#include <cutils/properties.h>
+
 static uint16_t seqnum = 0x0000;
 
 static int fd = -1;
@@ -53,7 +56,7 @@ int csr_open_bcsp(char *device, speed_t bcsp_rate)
 	int timeout = 0;
 
 	if (!device)
-		device = "/dev/ttyS0";
+		device = "/dev/ttyHS0";
 
 	fd = open(device, O_RDWR | O_NOCTTY);
 	if (fd < 0) {
@@ -76,7 +79,7 @@ int csr_open_bcsp(char *device, speed_t bcsp_rate)
 	ti.c_cflag |=  CLOCAL;
 	ti.c_cflag &= ~CRTSCTS;
 	ti.c_cflag |=  PARENB;
-	ti.c_cflag &= ~PARODD;
+	ti.c_cflag |= PARODD;
 	ti.c_cflag &= ~CSIZE;
 	ti.c_cflag |=  CS8;
 	ti.c_cflag &= ~CSTOPB;
@@ -84,7 +87,7 @@ int csr_open_bcsp(char *device, speed_t bcsp_rate)
 	ti.c_cc[VMIN] = 1;
 	ti.c_cc[VTIME] = 0;
 
-	cfsetospeed(&ti, bcsp_rate);
+	cfsetospeed(&ti, B115200);
 
 	if (tcsetattr(fd, TCSANOW, &ti) < 0) {
 		fprintf(stderr, "Can't change port settings: %s (%d)\n",
@@ -118,7 +121,7 @@ int csr_open_bcsp(char *device, speed_t bcsp_rate)
 	while (1) {
 		delay = ubcsp_poll(&activity);
 
-		if (activity & UBCSP_PACKET_SENT)
+		if (activity & UBCSP_PACKET_RECEIVED)
 			break;
 
 		if (delay) {
@@ -219,7 +222,6 @@ static int do_command(uint16_t command, uint16_t seqnum, uint16_t varid, uint8_t
 
 			if (timeout++ > 5000) {
 				fprintf(stderr, "Operation timed out\n");
-				errno = ETIMEDOUT;
 				return -1;
 			}
 		}
@@ -252,5 +254,9 @@ int csr_write_bcsp(uint16_t varid, uint8_t *value, uint16_t length)
 
 void csr_close_bcsp(void)
 {
-	close(fd);
+	if(fd != -1)
+	{
+		close(fd);
+		fd = -1;
+	}
 }
diff --git a/tools/hciattach.c b/tools/hciattach.c
index 59a76a7..453f882 100644
--- a/tools/hciattach.c
+++ b/tools/hciattach.c
@@ -27,6 +27,7 @@
 #include <config.h>
 #endif
 
+#define _GNU_SOURCE
 #include <stdio.h>
 #include <errno.h>
 #include <fcntl.h>
@@ -41,6 +42,8 @@
 #include <sys/time.h>
 #include <sys/param.h>
 #include <sys/ioctl.h>
+#include <sys/socket.h>
+#include <sys/uio.h>
 
 #include "lib/bluetooth.h"
 #include "lib/hci.h"
@@ -48,6 +51,8 @@
 
 #include "hciattach.h"
 
+#include "ppoll.h"
+
 struct uart_t {
 	char *type;
 	int  m_id;
@@ -63,7 +68,6 @@ struct uart_t {
 };
 
 #define FLOW_CTL	0x0001
-#define AMP_DEV		0x0002
 #define ENABLE_PM	1
 #define DISABLE_PM	0
 
@@ -84,7 +88,7 @@ static void sig_alarm(int sig)
 	exit(1);
 }
 
-int uart_speed(int s)
+static int uart_speed(int s)
 {
 	switch (s) {
 	case 9600:
@@ -127,10 +131,6 @@ int uart_speed(int s)
 	case 3500000:
 		return B3500000;
 #endif
-#ifdef B3710000
-	case 3710000:
-		return B3710000;
-#endif
 #ifdef B4000000
 	case 4000000:
 		return B4000000;
@@ -294,7 +294,7 @@ static int digi(int fd, struct uart_t *u, struct termios *ti)
 
 static int texas(int fd, struct uart_t *u, struct termios *ti)
 {
-	return texas_init(fd, &u->speed, ti);
+	return texas_init(fd, ti);
 }
 
 static int texas2(int fd, struct uart_t *u, struct termios *ti)
@@ -322,16 +322,6 @@ static int qualcomm(int fd, struct uart_t *u, struct termios *ti)
 	return qualcomm_init(fd, u->speed, ti, u->bdaddr);
 }
 
-static int intel(int fd, struct uart_t *u, struct termios *ti)
-{
-	return intel_init(fd, u->init_speed, &u->speed, ti);
-}
-
-static int bcm43xx(int fd, struct uart_t *u, struct termios *ti)
-{
-	return bcm43xx_init(fd, u->init_speed, u->speed, ti, u->bdaddr);
-}
-
 static int read_check(int fd, void *buf, int count)
 {
 	int res;
@@ -361,6 +351,8 @@ static void bcsp_tshy_sig_alarm(int sig)
 	unsigned char bcsp_sync_pkt[10] = {0xc0,0x00,0x41,0x00,0xbe,0xda,0xdc,0xed,0xed,0xc0};
 	static int retries = 0;
 
+	printf("[hciattach] Shy state. Send sync.\n"); //SS_BLUETOOTH(is80.hwang) 2012.02.10 : for CSR BT Initialization
+
 	if (retries < bcsp_max_retries) {
 		retries++;
 		if (write(serial_fd, &bcsp_sync_pkt, 10) < 0)
@@ -379,6 +371,8 @@ static void bcsp_tconf_sig_alarm(int sig)
 	unsigned char bcsp_conf_pkt[10] = {0xc0,0x00,0x41,0x00,0xbe,0xad,0xef,0xac,0xed,0xc0};
 	static int retries = 0;
 
+	printf("[hciattach] Curious state. Send Conf.\n"); //SS_BLUETOOTH(is80.hwang) 2012.02.10 : for CSR BT Initialization
+
 	if (retries < bcsp_max_retries){
 		retries++;
 		if (write(serial_fd, &bcsp_conf_pkt, 10) < 0)
@@ -410,7 +404,7 @@ static int bcsp(int fd, struct uart_t *u, struct termios *ti)
 	}
 
 	ti->c_cflag |= PARENB;
-	ti->c_cflag &= ~(PARODD);
+	ti->c_cflag |= PARODD;
 
 	if (tcsetattr(fd, TCSANOW, ti) < 0) {
 		perror("Can't set port settings");
@@ -516,6 +510,8 @@ static int bcsp(int fd, struct uart_t *u, struct termios *ti)
 			return -errno;
 	}
 
+	printf("[hciattach] Garrulous state.\n"); //SS_BLUETOOTH(is80.hwang) 2012.02.10 : for CSR BT Initialization
+
 	/* State = garrulous */
 
 	return 0;
@@ -1140,10 +1136,6 @@ struct uart_t uart[] = {
 	{ "bcm2035",    0x0A5C, 0x2035, HCI_UART_H4,   115200, 460800,
 				FLOW_CTL, DISABLE_PM, NULL, bcm2035  },
 
-	/* Broadcom BCM43XX */
-	{ "bcm43xx",    0x0000, 0x0000, HCI_UART_H4,   115200, 3000000,
-				FLOW_CTL, DISABLE_PM, NULL, bcm43xx, NULL  },
-
 	{ "ath3k",    0x0000, 0x0000, HCI_UART_ATH3K, 115200, 115200,
 			FLOW_CTL, DISABLE_PM, NULL, ath3k_ps, ath3k_pm  },
 
@@ -1151,18 +1143,6 @@ struct uart_t uart[] = {
 	{ "qualcomm",   0x0000, 0x0000, HCI_UART_H4,   115200, 115200,
 			FLOW_CTL, DISABLE_PM, NULL, qualcomm, NULL },
 
-	/* Intel Bluetooth Module */
-	{ "intel",      0x0000, 0x0000, HCI_UART_H4,   115200, 115200,
-			FLOW_CTL, DISABLE_PM, NULL, intel, NULL },
-
-	/* Three-wire UART */
-	{ "3wire",      0x0000, 0x0000, HCI_UART_3WIRE, 115200, 115200,
-			0, DISABLE_PM, NULL, NULL, NULL },
-
-	/* AMP controller UART */
-	{ "amp",	0x0000, 0x0000, HCI_UART_H4, 115200, 115200,
-			AMP_DEV, DISABLE_PM, NULL, NULL, NULL },
-
 	{ NULL, 0 }
 };
 
@@ -1196,9 +1176,6 @@ static int init_uart(char *dev, struct uart_t *u, int send_break, int raw)
 	if (raw)
 		flags |= 1 << HCI_UART_RAW_DEVICE;
 
-	if (u->flags & AMP_DEV)
-		flags |= 1 << HCI_UART_CREATE_AMP;
-
 	fd = open(dev, O_RDWR | O_NOCTTY);
 	if (fd < 0) {
 		perror("Can't open serial port");
@@ -1280,9 +1257,7 @@ static void usage(void)
 {
 	printf("hciattach - HCI UART driver initialization utility\n");
 	printf("Usage:\n");
-	printf("\thciattach [-n] [-p] [-b] [-r] [-t timeout] [-s initial_speed]"
-			" <tty> <type | id> [speed] [flow|noflow]"
-			" [sleep|nosleep] [bdaddr]\n");
+	printf("\thciattach [-n] [-p] [-b] [-r] [-t timeout] [-s initial_speed] <tty> <type | id> [speed] [flow|noflow] [bdaddr]\n");
 	printf("\thciattach -l\n");
 }
 
diff --git a/tools/hciattach.h b/tools/hciattach.h
index 4279a33..7386046 100644
--- a/tools/hciattach.h
+++ b/tools/hciattach.h
@@ -44,17 +44,14 @@
 #define HCI_UART_QCA	8
 
 #define HCI_UART_RAW_DEVICE	0
-#define HCI_UART_RESET_ON_INIT	1
-#define HCI_UART_CREATE_AMP	2
 #define HCI_UART_INIT_PENDING	3
 #define HCI_UART_EXT_CONFIG	4
 #define HCI_UART_VND_DETECT	5
 
-int read_hci_event(int fd, unsigned char *buf, int size);
+int read_hci_event(int fd, unsigned char* buf, int size);
 int set_speed(int fd, struct termios *ti, int speed);
-int uart_speed(int speed);
 
-int texas_init(int fd, int *speed, struct termios *ti);
+int texas_init(int fd, struct termios *ti);
 int texas_post(int fd, struct termios *ti);
 int texasalt_init(int fd, int speed, struct termios *ti);
 int stlc2500_init(int fd, bdaddr_t *bdaddr);
@@ -63,6 +60,3 @@ int ath3k_init(int fd, int speed, int init_speed, char *bdaddr,
 						struct termios *ti);
 int ath3k_post(int fd, int pm);
 int qualcomm_init(int fd, int speed, struct termios *ti, const char *bdaddr);
-int intel_init(int fd, int init_speed, int *speed, struct termios *ti);
-int bcm43xx_init(int fd, int def_speed, int speed, struct termios *ti,
-		const char *bdaddr);
diff --git a/tools/hciattach_qualcomm.c b/tools/hciattach_qualcomm.c
index 22ac629..1cec1c1 100644
--- a/tools/hciattach_qualcomm.c
+++ b/tools/hciattach_qualcomm.c
@@ -40,6 +40,7 @@
 #include <sys/time.h>
 #include <sys/param.h>
 #include <sys/ioctl.h>
+#include <sys/socket.h>
 #include <sys/uio.h>
 
 #include "lib/bluetooth.h"
diff --git a/tools/hciattach_ti.c b/tools/hciattach_ti.c
old mode 100644
new mode 100755
index 828dd61..b001d93
--- a/tools/hciattach_ti.c
+++ b/tools/hciattach_ti.c
@@ -36,6 +36,8 @@
 #include <sys/types.h>
 #include <sys/param.h>
 #include <sys/ioctl.h>
+#include <sys/socket.h>
+#include <sys/uio.h>
 
 #include "lib/bluetooth.h"
 #include "lib/hci.h"
@@ -55,7 +57,7 @@
 
 #define TI_MANUFACTURER_ID	13
 
-#define FIRMWARE_DIRECTORY	"/lib/firmware/ti-connectivity/"
+#define FIRMWARE_DIRECTORY	"/lib/firmware/"
 
 #define ACTION_SEND_COMMAND	1
 #define ACTION_WAIT_EVENT	2
@@ -109,15 +111,15 @@ struct bts_action_serial {
 	uint32_t flow_control;
 }__attribute__ ((packed));
 
-static FILE *bts_load_script(const char *file_name, uint32_t *version)
+static FILE *bts_load_script(const char* file_name, uint32_t* version)
 {
 	struct bts_header header;
-	FILE *fp;
+	FILE* fp;
 
 	fp = fopen(file_name, "rb");
 	if (!fp) {
 		perror("can't open firmware file");
-		return NULL;
+		goto out;
 	}
 
 	if (1 != fread(&header, sizeof(struct bts_header), 1, fp)) {
@@ -133,16 +135,17 @@ static FILE *bts_load_script(const char *file_name, uint32_t *version)
 	if (NULL != version)
 		*version = header.version;
 
-	return fp;
+	goto out;
 
 errclose:
 	fclose(fp);
-
-	return NULL;
+	fp = NULL;
+out:
+	return fp;
 }
 
-static unsigned long bts_fetch_action(FILE *fp, unsigned char *action_buf,
-				unsigned long buf_size, uint16_t *action_type)
+static unsigned long bts_fetch_action(FILE* fp, unsigned char* action_buf,
+				unsigned long buf_size, uint16_t* action_type)
 {
 	struct bts_action action_hdr;
 	unsigned long nread;
@@ -169,7 +172,7 @@ static unsigned long bts_fetch_action(FILE *fp, unsigned char *action_buf,
 	return nread * sizeof(uint8_t);
 }
 
-static void bts_unload_script(FILE *fp)
+static void bts_unload_script(FILE* fp)
 {
 	if (fp)
 		fclose(fp);
@@ -208,7 +211,7 @@ static void brf_delay(struct bts_action_delay *delay)
 }
 
 static int brf_set_serial_params(struct bts_action_serial *serial_action,
-						int fd, int *speed, struct termios *ti)
+						int fd, struct termios *ti)
 {
 	fprintf(stderr, "texas: changing baud rate to %u, flow control to %u\n",
 				serial_action->baud, serial_action->flow_control );
@@ -231,13 +234,10 @@ static int brf_set_serial_params(struct bts_action_serial *serial_action,
 		return -1;
 	}
 
-	if (speed)
-		*speed = serial_action->baud;
-
 	return 0;
 }
 
-static int brf_send_command_socket(int fd, struct bts_action_send *send_action)
+static int brf_send_command_socket(int fd, struct bts_action_send* send_action)
 {
 	char response[1024] = {0};
 	hci_command_hdr *cmd = (hci_command_hdr *) send_action->data;
@@ -267,8 +267,7 @@ static int brf_send_command_socket(int fd, struct bts_action_send *send_action)
 	return 0;
 }
 
-static int brf_send_command_file(int fd, struct bts_action_send *send_action,
-								long size)
+static int brf_send_command_file(int fd, struct bts_action_send* send_action, long size)
 {
 	unsigned char response[1024] = {0};
 	long ret = 0;
@@ -297,8 +296,7 @@ static int brf_send_command_file(int fd, struct bts_action_send *send_action,
 }
 
 
-static int brf_send_command(int fd, struct bts_action_send *send_action,
-						long size, int hcill_installed)
+static int brf_send_command(int fd, struct bts_action_send* send_action, long size, int hcill_installed)
 {
 	int ret = 0;
 	char *fixed_action;
@@ -315,23 +313,21 @@ static int brf_send_command(int fd, struct bts_action_send *send_action,
 }
 
 static int brf_do_action(uint16_t brf_type, uint8_t *brf_action, long brf_size,
-				int fd, int *speed, struct termios *ti, int hcill_installed)
+				int fd, struct termios *ti, int hcill_installed)
 {
 	int ret = 0;
 
 	switch (brf_type) {
 	case ACTION_SEND_COMMAND:
 		DPRINTF("W");
-		ret = brf_send_command(fd,
-					(struct bts_action_send *) brf_action,
-					brf_size, hcill_installed);
+		ret = brf_send_command(fd, (struct bts_action_send*) brf_action, brf_size, hcill_installed);
 		break;
 	case ACTION_WAIT_EVENT:
 		DPRINTF("R");
 		break;
 	case ACTION_SERIAL:
 		DPRINTF("S");
-		ret = brf_set_serial_params((struct bts_action_serial *) brf_action, fd, speed, ti);
+		ret = brf_set_serial_params((struct bts_action_serial *) brf_action, fd, ti);
 		break;
 	case ACTION_DELAY:
 		DPRINTF("D");
@@ -382,7 +378,7 @@ static int brf_action_is_deep_sleep(uint8_t *brf_action, long brf_size,
  * The second time it is called, it assumes HCILL protocol is set up,
  * and sends rest of brf script via the supplied socket.
  */
-static int brf_do_script(int fd, int *speed, struct termios *ti, const char *bts_file)
+static int brf_do_script(int fd, struct termios *ti, const char *bts_file)
 {
 	int ret = 0,  hcill_installed = bts_file ? 0 : 1;
 	uint32_t vers;
@@ -417,7 +413,7 @@ static int brf_do_script(int fd, int *speed, struct termios *ti, const char *bts
 	/* execute current action and continue to parse brf script file */
 	while (brf_size != 0) {
 		ret = brf_do_action(brf_type, brf_action, brf_size,
-						fd, speed, ti, hcill_installed);
+						fd, ti, hcill_installed);
 		if (ret == -1)
 			break;
 
@@ -440,7 +436,7 @@ static int brf_do_script(int fd, int *speed, struct termios *ti, const char *bts
 	return ret;
 }
 
-int texas_init(int fd, int *speed, struct termios *ti)
+int texas_init(int fd, struct termios *ti)
 {
 	struct timespec tm = {0, 50000};
 	char cmd[4];
@@ -491,7 +487,7 @@ int texas_init(int fd, int *speed, struct termios *ti)
 	bts_file = get_firmware_name(resp);
 	fprintf(stderr, "Firmware file : %s\n", bts_file);
 
-	n = brf_do_script(fd, speed, ti, bts_file);
+	n = brf_do_script(fd, ti, bts_file);
 
 	nanosleep(&tm, NULL);
 
@@ -525,7 +521,7 @@ int texas_post(int fd, struct termios *ti)
 		return -1;
 	}
 
-	ret = brf_do_script(dd, NULL, ti, NULL);
+	ret = brf_do_script(dd, ti, NULL);
 
 	hci_close_dev(dd);
 
diff --git a/tools/hciattach_tialt.c b/tools/hciattach_tialt.c
old mode 100644
new mode 100755
index f6ef068..204f671
--- a/tools/hciattach_tialt.c
+++ b/tools/hciattach_tialt.c
@@ -39,6 +39,7 @@
 #include <sys/time.h>
 #include <sys/param.h>
 #include <sys/ioctl.h>
+#include <sys/socket.h>
 #include <sys/uio.h>
 
 #include "lib/bluetooth.h"
@@ -95,9 +96,37 @@ typedef struct {
 	uint32_t speed;
 } __attribute__((packed)) texas_speed_change_cmd_t;
 
-static int texas_change_speed(int fd, uint32_t speed)
+static int texas_change_speed(int fd, struct termios *ti, uint32_t speed)
 {
-	return 0;
+        /* Send a speed-change request */
+        texas_speed_change_cmd_t cmd;
+        int n;
+
+        cmd.uart_prefix = HCI_COMMAND_PKT;
+        cmd.hci_hdr.opcode = 0xff36;
+        cmd.hci_hdr.plen = sizeof(uint32_t);
+        cmd.speed = speed;
+
+        fprintf(stderr, "Setting speed to %d\n", speed);
+        n = write(fd, &cmd, sizeof(cmd));
+        if (n < 0) {
+                perror("Failed to write speed-set command");
+                return -1;
+        }
+        if (n < (int)sizeof(cmd)) {
+                fprintf(stderr, "Wanted to write %d bytes, could only write %d. "
+                "Stop\n", (int)sizeof(cmd), n);
+                return -1;
+        }
+        /* Parse speed-change reply */
+        if (read_command_complete(fd, cmd.hci_hdr.opcode, cmd.hci_hdr.plen) < 0) {
+                return -1;
+        }
+        if (set_speed(fd, ti, speed) < 0) {
+                perror("Can't set baud rate");
+                return -1;
+        }
+        return 0;
 }
 
 static int texas_load_firmware(int fd, const char *firmware) {
@@ -234,9 +263,8 @@ int texasalt_init(int fd, int speed, struct termios *ti)
 				brf_chip);
 
 		sprintf(fw, "/etc/firmware/%s.bin", c_brf_chip[brf_chip]);
+		texas_change_speed(fd, ti, speed);
 		texas_load_firmware(fd, fw);
-
-		texas_change_speed(fd, speed);
 	}
 	nanosleep(&tm, NULL);
 	return 0;
diff --git a/tools/ppoll.h b/tools/ppoll.h
new file mode 100644
index 0000000..afb5af4
--- /dev/null
+++ b/tools/ppoll.h
@@ -0,0 +1,14 @@
+#ifdef ppoll
+#undef ppoll
+#endif
+#define ppoll compat_ppoll
+static inline int compat_ppoll(struct pollfd *fds, nfds_t nfds,
+                               const struct timespec *timeout, const sigset_t *sigmask)
+{
+    if (timeout == NULL)
+        return poll(fds, nfds, -1);
+    else if (timeout->tv_sec == 0)
+        return poll(fds, nfds, 500);
+    else
+        return poll(fds, nfds, timeout->tv_sec * 1000);
+}
\ No newline at end of file
-- 
1.9.1

